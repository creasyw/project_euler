# Brutal force cannot work for this question.
# "The triple generated by Euclids formula is primitive if and only if m and n are 
# coprime and m-n is odd." (Pythagorean triple @ Wikipedia)

from collections import defaultdict
from fractions import gcd
from math import sqrt

def pythagorean(perimeter):
    """return all of the candidates whose perimeter is less than the input value"""
    limit = int(sqrt(perimeter/2))+1
    result = defaultdict(list)
    for m in range(2, limit):
        for n in range(1,m):
            if gcd(m,n) == 1 and (m-n)%2 == 1:
                a = m**2-n**2
                b = 2*m*n
                c = m**2+n**2
                p = a+b+c
                s = p
                while p <= perimeter:
                    result[p].append((p*a/s,p*b/s,p*c/s))
                    p += a+b+c
    return result

def main():
    solutions = pythagorean(1500000)
    print sum(1 for k in solutions.values() if len(k)==1)

if __name__ == "__main__":
    main()
